
---
events:
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineSystem.cmake:205 (message)"
      - "CMakeLists.txt:3 (project)"
    message: |
      The system is: Windows - 10.0.26100 - AMD64
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCCompiler.cmake:123 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:3 (project)"
    message: |
      Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
      Compiler: C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe 
      Build flags: /nologo;/DWIN32;/D_WINDOWS;/utf-8;/MP
      Id flags:  
      
      The output was:
      0
      CMakeCCompilerId.c
      
      
      Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.exe"
      
      Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.obj"
      
      The C compiler identification is MSVC, found in:
        C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/3.31.6-msvc6/CompilerIdC/CMakeCCompilerId.exe
      
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:1288 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:250 (CMAKE_DETERMINE_MSVC_SHOWINCLUDES_PREFIX)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCCompiler.cmake:123 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:3 (project)"
    message: |
      Detecting C compiler /showIncludes prefix:
        main.c
        Note: including file: C:\\Users\\Redux\\cpp-asteroids-sdl2\\vcpkg_installed\\vcpkg\\blds\\wavpack\\x64-windows-dbg\\CMakeFiles\\ShowIncludes\\foo.h
        
      Found prefix "Note: including file: "
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake:126 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:3 (project)"
    message: |
      Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
      Compiler: C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe 
      Build flags: /nologo;/DWIN32;/D_WINDOWS;/utf-8;/GR;/EHsc;/MP
      Id flags:  
      
      The output was:
      0
      CMakeCXXCompilerId.cpp
      
      
      Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.exe"
      
      Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.obj"
      
      The CXX compiler identification is MSVC, found in:
        C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/3.31.6-msvc6/CompilerIdCXX/CMakeCXXCompilerId.exe
      
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:1288 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:250 (CMAKE_DETERMINE_MSVC_SHOWINCLUDES_PREFIX)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCXXCompiler.cmake:126 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:3 (project)"
    message: |
      Detecting CXX compiler /showIncludes prefix:
        main.c
        Note: including file: C:\\Users\\Redux\\cpp-asteroids-sdl2\\vcpkg_installed\\vcpkg\\blds\\wavpack\\x64-windows-dbg\\CMakeFiles\\ShowIncludes\\foo.h
        
      Found prefix "Note: including file: "
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake:74 (try_compile)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:3 (project)"
    checks:
      - "Detecting C compiler ABI info"
    directories:
      source: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-i4gymq"
      binary: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-i4gymq"
    cmakeVariables:
      CMAKE_C_FLAGS: " /nologo /DWIN32 /D_WINDOWS /utf-8 /MP "
      CMAKE_C_FLAGS_DEBUG: "/MDd /Z7 /Ob0 /Od /RTC1 "
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MSVC_DEBUG_INFORMATION_FORMAT: ""
      CMAKE_MSVC_RUNTIME_LIBRARY: "MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>"
      VCPKG_CHAINLOAD_TOOLCHAIN_FILE: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg/scripts/toolchains/windows.cmake"
      VCPKG_CRT_LINKAGE: "dynamic"
      VCPKG_CXX_FLAGS: ""
      VCPKG_CXX_FLAGS_DEBUG: ""
      VCPKG_CXX_FLAGS_RELEASE: ""
      VCPKG_C_FLAGS: ""
      VCPKG_C_FLAGS_DEBUG: ""
      VCPKG_C_FLAGS_RELEASE: ""
      VCPKG_INSTALLED_DIR: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed"
      VCPKG_LINKER_FLAGS: ""
      VCPKG_LINKER_FLAGS_DEBUG: ""
      VCPKG_LINKER_FLAGS_RELEASE: ""
      VCPKG_PLATFORM_TOOLSET: "v143"
      VCPKG_PREFER_SYSTEM_LIBS: "OFF"
      VCPKG_SET_CHARSET_FLAG: "ON"
      VCPKG_TARGET_ARCHITECTURE: "x64"
      VCPKG_TARGET_TRIPLET: "x64-windows"
      Z_VCPKG_ROOT_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg"
    buildResult:
      variable: "CMAKE_C_ABI_COMPILED"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-i4gymq'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe" -v cmTC_a430a
        [1/2] C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\cl.exe  /nologo   /nologo /DWIN32 /D_WINDOWS /utf-8 /MP   /MDd /Z7 /Ob0 /Od /RTC1 /showIncludes /FoCMakeFiles\\cmTC_a430a.dir\\CMakeCCompilerABI.c.obj /FdCMakeFiles\\cmTC_a430a.dir\\ /FS -c "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\share\\cmake-3.31\\Modules\\CMakeCCompilerABI.c"
        [2/2] C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_a430a.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_a430a.dir\\CMakeCCompilerABI.c.obj  /out:cmTC_a430a.exe /implib:cmTC_a430a.lib /pdb:cmTC_a430a.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        
      exitCode: 0
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake:218 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:3 (project)"
    message: |
      Parsed C implicit link information:
        link line regex: [^( *|.*[/\\])(ld[0-9]*(\\.[a-z]+)?|link\\.exe|lld-link(\\.exe)?|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
        linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\\])?(ld[0-9]*(\\.[a-z]+)?|link\\.exe|lld-link(\\.exe)?))("|,| |$)]
        linker tool for 'C': C:/PROGRA~2/MICROS~3/2022/BUILDT~1/VC/Tools/MSVC/1444~1.352/bin/Hostx64/x64/link.exe
        implicit libs: []
        implicit objs: []
        implicit dirs: []
        implicit fwks: []
      
      
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake:40 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake:255 (cmake_determine_linker_id)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:3 (project)"
    message: |
      Running the C compiler's linker: "C:/PROGRA~2/MICROS~3/2022/BUILDT~1/VC/Tools/MSVC/1444~1.352/bin/Hostx64/x64/link.exe" "-v"
      Microsoft (R) Incremental Linker Version 14.44.35217.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake:74 (try_compile)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:3 (project)"
    checks:
      - "Detecting CXX compiler ABI info"
    directories:
      source: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-6do1go"
      binary: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-6do1go"
    cmakeVariables:
      CMAKE_CXX_FLAGS: " /nologo /DWIN32 /D_WINDOWS /utf-8 /GR /EHsc /MP "
      CMAKE_CXX_FLAGS_DEBUG: "/MDd /Z7 /Ob0 /Od /RTC1 "
      CMAKE_CXX_SCAN_FOR_MODULES: "OFF"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MSVC_DEBUG_INFORMATION_FORMAT: ""
      CMAKE_MSVC_RUNTIME_LIBRARY: "MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>"
      VCPKG_CHAINLOAD_TOOLCHAIN_FILE: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg/scripts/toolchains/windows.cmake"
      VCPKG_CRT_LINKAGE: "dynamic"
      VCPKG_CXX_FLAGS: ""
      VCPKG_CXX_FLAGS_DEBUG: ""
      VCPKG_CXX_FLAGS_RELEASE: ""
      VCPKG_C_FLAGS: ""
      VCPKG_C_FLAGS_DEBUG: ""
      VCPKG_C_FLAGS_RELEASE: ""
      VCPKG_INSTALLED_DIR: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed"
      VCPKG_LINKER_FLAGS: ""
      VCPKG_LINKER_FLAGS_DEBUG: ""
      VCPKG_LINKER_FLAGS_RELEASE: ""
      VCPKG_PLATFORM_TOOLSET: "v143"
      VCPKG_PREFER_SYSTEM_LIBS: "OFF"
      VCPKG_SET_CHARSET_FLAG: "ON"
      VCPKG_TARGET_ARCHITECTURE: "x64"
      VCPKG_TARGET_TRIPLET: "x64-windows"
      Z_VCPKG_ROOT_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg"
    buildResult:
      variable: "CMAKE_CXX_ABI_COMPILED"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-6do1go'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe" -v cmTC_d7f16
        [1/2] C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\cl.exe  /nologo /TP   /nologo /DWIN32 /D_WINDOWS /utf-8 /GR /EHsc /MP   /MDd /Z7 /Ob0 /Od /RTC1 /showIncludes /FoCMakeFiles\\cmTC_d7f16.dir\\CMakeCXXCompilerABI.cpp.obj /FdCMakeFiles\\cmTC_d7f16.dir\\ /FS -c "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\share\\cmake-3.31\\Modules\\CMakeCXXCompilerABI.cpp"
        [2/2] C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_d7f16.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_d7f16.dir\\CMakeCXXCompilerABI.cpp.obj  /out:cmTC_d7f16.exe /implib:cmTC_d7f16.lib /pdb:cmTC_d7f16.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        
      exitCode: 0
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake:218 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:3 (project)"
    message: |
      Parsed CXX implicit link information:
        link line regex: [^( *|.*[/\\])(ld[0-9]*(\\.[a-z]+)?|link\\.exe|lld-link(\\.exe)?|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
        linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\\])?(ld[0-9]*(\\.[a-z]+)?|link\\.exe|lld-link(\\.exe)?))("|,| |$)]
        linker tool for 'CXX': C:/PROGRA~2/MICROS~3/2022/BUILDT~1/VC/Tools/MSVC/1444~1.352/bin/Hostx64/x64/link.exe
        implicit libs: []
        implicit objs: []
        implicit dirs: []
        implicit fwks: []
      
      
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CMakeDetermineLinkerId.cmake:40 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerABI.cmake:255 (cmake_determine_linker_id)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:3 (project)"
    message: |
      Running the CXX compiler's linker: "C:/PROGRA~2/MICROS~3/2022/BUILDT~1/VC/Tools/MSVC/1444~1.352/bin/Hostx64/x64/link.exe" "-v"
      Microsoft (R) Incremental Linker Version 14.44.35217.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLanguage.cmake:133 (message)"
      - "CMakeLists.txt:36 (check_language)"
    checks:
      - "Looking for a ASM compiler"
    message: |
      Looking for a ASM compiler passed with the following output:
      -- The ASM compiler identification is MSVC
      -- Found assembler: C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe
      -- Configuring done (0.4s)
      -- Generating done (0.0s)
      -- Build files have been written to: C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CheckASM
      
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:1250 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineASMCompiler.cmake:135 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:38 (enable_language)"
    message: |
      Checking whether the ASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":
      Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35217 for x64
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      cl : Command line warning D9002 : ignoring unknown option '--version'
      cl : Command line error D8003 : missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:1250 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineASMCompiler.cmake:135 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:38 (enable_language)"
    message: |
      Checking whether the ASM compiler is AppleClang using "--version" did not match "(Apple (clang|LLVM) version)":
      Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35217 for x64
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      cl : Command line warning D9002 : ignoring unknown option '--version'
      cl : Command line error D8003 : missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:1250 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineASMCompiler.cmake:135 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:38 (enable_language)"
    message: |
      Checking whether the ASM compiler is Clang using "--version" did not match "(clang version)":
      Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35217 for x64
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      cl : Command line warning D9002 : ignoring unknown option '--version'
      cl : Command line error D8003 : missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:1250 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineASMCompiler.cmake:135 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:38 (enable_language)"
    message: |
      Checking whether the ASM compiler is ARMClang using "--version" did not match "armclang":
      Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35217 for x64
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      cl : Command line warning D9002 : ignoring unknown option '--version'
      cl : Command line error D8003 : missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:1250 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineASMCompiler.cmake:135 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:38 (enable_language)"
    message: |
      Checking whether the ASM compiler is OrangeC using "--version" did not match "occ \\(OrangeC\\) Version":
      Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35217 for x64
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      cl : Command line warning D9002 : ignoring unknown option '--version'
      cl : Command line error D8003 : missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:1250 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineASMCompiler.cmake:135 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:38 (enable_language)"
    message: |
      Checking whether the ASM compiler is HP using "-V" did not match "HP C":
      Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35217 for x64
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      cl : Command line error D8004 : '/V' requires an argument
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:1250 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineASMCompiler.cmake:135 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:38 (enable_language)"
    message: |
      Checking whether the ASM compiler is Intel using "--version" did not match "(ICC)":
      Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35217 for x64
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      cl : Command line warning D9002 : ignoring unknown option '--version'
      cl : Command line error D8003 : missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:1250 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineASMCompiler.cmake:135 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:38 (enable_language)"
    message: |
      Checking whether the ASM compiler is IntelLLVM using "--version" did not match "(Intel[^
      ]+oneAPI)":
      Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35217 for x64
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      cl : Command line warning D9002 : ignoring unknown option '--version'
      cl : Command line error D8003 : missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:1250 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineASMCompiler.cmake:135 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:38 (enable_language)"
    message: |
      Checking whether the ASM compiler is SunPro using "-V" did not match "Sun C":
      Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35217 for x64
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      cl : Command line error D8004 : '/V' requires an argument
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:1250 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineASMCompiler.cmake:135 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:38 (enable_language)"
    message: |
      Checking whether the ASM compiler is XL using "-qversion" did not match "XL C":
      Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35217 for x64
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      cl : Command line warning D9002 : ignoring unknown option '-qversion'
      cl : Command line error D8003 : missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineCompilerId.cmake:1237 (message)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CMakeDetermineASMCompiler.cmake:135 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:38 (enable_language)"
    message: |
      Checking whether the ASM compiler is MSVC using "-?" matched "Microsoft":
      Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35217 for x64
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
                               C/C++ COMPILER OPTIONS
      
      
                                    -OPTIMIZATION-
      
      /O1 maximum optimizations (favor space) /O2 maximum optimizations (favor speed)
      /Ob<n> inline expansion (default n=0)   /Od disable optimizations (default)
      /Og enable global optimization          /Oi[-] enable intrinsic functions
      /Os favor code space                    /Ot favor code speed
      /Ox optimizations (favor speed)         
      /favor:<blend|AMD64|INTEL64|ATOM> select processor to optimize for, one of:
          blend - a combination of optimizations for several different x64 processors
          AMD64 - 64-bit AMD processors
          INTEL64 - Intel(R)64 architecture processors
          ATOM - Intel(R) Atom(TM) processors
      
                                   -CODE GENERATION-
      
      /Gu[-] ensure distinct functions have distinct addresses
      /Gw[-] separate global variables for linker
      /GF enable read-only string pooling     /Gy[-] separate functions for linker
      /GS[-] enable security checks           /GR[-] enable C++ RTTI
      /guard:cf[-] enable CFG (control flow guard)
      /guard:ehcont[-] enable EH continuation metadata (CET)
      /EHs enable C++ EH (no SEH exceptions)  /EHa enable C++ EH (w/ SEH exceptions)
      /EHc extern "C" defaults to nothrow     
      /EHr always generate noexcept runtime termination checks
      /fp:<contract|except[-]|fast|precise|strict> choose floating-point model:
          contract - consider floating-point contractions when generating code
          except[-] - consider floating-point exceptions when generating code
          fast - "fast" floating-point model; results are less predictable
          precise - "precise" floating-point model; results are predictable
          strict - "strict" floating-point model (implies /fp:except)
      /Qfast_transcendentals generate inline FP intrinsics even with /fp:except
      /Qspectre[-] enable mitigations for CVE 2017-5753
      /Qpar[-] enable parallel code generation
      /Qpar-report:1 auto-parallelizer diagnostic; indicate parallelized loops
      /Qpar-report:2 auto-parallelizer diagnostic; indicate loops not parallelized
      /Qvec-report:1 auto-vectorizer diagnostic; indicate vectorized loops
      /Qvec-report:2 auto-vectorizer diagnostic; indicate loops not vectorized
      /GL[-] enable link-time code generation 
      /volatile:<iso|ms> choose volatile model:
          iso - Acquire/release semantics not guaranteed on volatile accesses
          ms  - Acquire/release semantics guaranteed on volatile accesses
      /GA optimize for Windows Application    /Ge force stack checking for all funcs
      /Gs[num] control stack checking calls   /Gh enable _penter function call
      /GH enable _pexit function call         /GT generate fiber-safe TLS accesses
      /RTC1 Enable fast checks (/RTCsu)       /RTCc Convert to smaller type checks
      /RTCs Stack Frame runtime checking      /RTCu Uninitialized local usage checks
      /clr[:option] compile for common language runtime, where option is:
          pure : produce IL-only output file (no native executable code)
          safe : produce IL-only verifiable output file
          netcore : produce assemblies targeting .NET Core runtime
          noAssembly : do not produce an assembly
          nostdlib : ignore the system .NET framework directory when searching for assemblies
          nostdimport : do not import any required assemblies implicitly
          initialAppDomain : enable initial AppDomain behavior of Visual C++ 2002
          implicitKeepAlive- : turn off implicit emission of System::GC::KeepAlive(this)
          char_t- : turn off metadata support for char8_t, char16_t and char32_t
          ECMAParamArray : use rules specified in ECMA-372/14.6 for overloads with parameter arrays (implied by /clr)
          ECMAParamArray- : use new rules for overloads with parameter arrays (implied by /clr:netcore)
      /fsanitize=address Enable address sanitizer codegen
      /homeparams Force parameters passed in registers to be written to the stack
      /GZ Enable stack checks (/RTCs)         /Gv __vectorcall calling convention
      (Preview) /dynamicdeopt Enable dynamic debugging; place deoptimized breakpoints and step in anywhere with on-demand function deoptimization
      (Preview) /dynamicdeopt:suffix <suffix> File extension suffix for deoptimized output (default: .alt)
      (Preview) /dynamicdeopt:sync Build deoptimized output after optimized output instead of in parallel
      /arch:<SSE2|SSE4.2|AVX|AVX2|AVX512|AVX10.x> minimum CPU architecture requirements, one of:
         SSE2 - (default) enable use of instructions available with SSE2-enabled CPUs
         SSE4.2 - enable use of instructions available with SSE 4.2-enabled CPUs
         AVX - enable use of instructions available with AVX-enabled CPUs
         AVX2 - enable use of instructions available with AVX2-enabled CPUs
         AVX512 - enable use of instructions available with AVX-512-enabled CPUs
         AVX10.x - enable use of instructions available with AVX10.x-enabled CPUs. Valid values of x are 1
      /QIntel-jcc-erratum enable mitigations for Intel JCC erratum
      /Qspectre-load Enable spectre mitigations for all instructions which load memory
      /Qspectre-load-cf Enable spectre mitigations for all control-flow instructions which load memory
      /Qspectre-jmp[-] Enable spectre mitigations for unconditional jump instructions
      /fpcvt:<IA|BC> FP to unsigned integer conversion compatibility
         IA - results compatible with VCVTTSD2USI instruction
         BC - results compatible with VS2017 and earlier compiler
      /jumptablerdata Place jump tables for switch case statements in .rdata section
      /vlen=<256|512> Choose vector length of either 256 or 512 for automatic code-generation
      /vlen Choose default vector length based on /arch setting
      
                                    -OUTPUT FILES-
      
      /Fa[file] name assembly listing file    /FA[scu] configure assembly listing
      /Fd[file] name .PDB file                /Fe<file> name executable file
      /Fm[file] name map file                 /Fo<file> name object file
      /Fp<file> name precompiled header file  /Fr[file] name source browser file
      /FR[file] name extended .SBR file       /Fi[file] name preprocessed file
      /Fd: <file> name .PDB file              /Fe: <file> name executable file
      /Fm: <file> name map file               /Fo: <file> name object file
      /Fp: <file> name .PCH file              /FR: <file> name extended .SBR file
      /Fi: <file> name preprocessed file      
      /Ft<dir> location of the header files generated for #import
      /doc[file] process XML documentation comments and optionally name the .xdc file
      
                                    -PREPROCESSOR-
      
      /AI<dir> add to assembly search path    /FU<file> import .NET assembly/module
      /FU:asFriend<file> import .NET assembly/module as friend
      /C don't strip comments                 /D<name>{=|#}<text> define macro
      /E preprocess to stdout                 /EP preprocess to stdout, no #line
      /P preprocess to file                   /Fx merge injected code to file
      /FI<file> name forced include file      /U<name> remove predefined macro
      /u remove all predefined macros         /I<dir> add to include search path
      /X ignore "standard places"             
      /PH generate #pragma file_hash when preprocessing
      /PD print all macro definitions         
      
                                      -LANGUAGE-
      
      /std:<c++14|c++17|c++20|c++latest> C++ standard version
          c++14 - ISO/IEC 14882:2014 (default)
          c++17 - ISO/IEC 14882:2017
          c++20 - ISO/IEC 14882:2020
          c++latest - latest draft standard (feature set subject to change)
      /std:<c11|c17|clatest> C standard version
          c11 - ISO/IEC 9899:2011
          c17 - ISO/IEC 9899:2018
          clatest - latest draft standard (feature set subject to change)
      /permissive[-] enable some nonconforming code to compile
                     (feature set subject to change) (off by default in C++20 and later)
      /Za disable extensions (not recommended for C++)
      /ZW enable WinRT language extensions    /Zs syntax check only
      /await enable resumable functions extension
      /await:strict enable standard C++20 coroutine support with earlier language versions
      /constexpr:depth<N>     recursion depth limit for constexpr evaluation (default: 512)
      /constexpr:backtrace<N> show N constexpr evaluations in diagnostics (default: 10)
      /constexpr:steps<N>     terminate constexpr evaluation after N steps (default: 1048576)
      /Zi enable debugging information        /Z7 enable old-style debug info
      /Zo[-] generate richer debugging information for optimized code (on by default)
      /ZH:[MD5|SHA1|SHA_256] hash algorithm for calculation of file checksum in debug info (default: SHA_256)
      /Zp[n] pack structs on n-byte boundary  /Zl omit default library name in .OBJ
      /vd{0|1|2} disable/enable vtordisp      /vm<x> type of pointers to members
      /Zc:arg1[,arg2] language conformance, where arguments can be:
        forScope[-]           enforce Standard C++ for scoping rules
        wchar_t[-]            wchar_t is the native type, not a typedef
        auto[-]               enforce the new Standard C++ meaning for auto
        trigraphs[-]          enable trigraphs (off by default)
        rvalueCast[-]         enforce Standard C++ explicit type conversion rules
                              (on by default in C++20 or later, implied by /permissive-)
        strictStrings[-]      disable string-literal to [char|wchar_t]*
                              conversion (on by default in C++20 or later, implied by /permissive-)
        implicitNoexcept[-]   enable implicit noexcept on required functions
        threadSafeInit[-]     enable thread-safe local static initialization
        inline[-]             remove unreferenced function or data if it is
                              COMDAT or has internal linkage only (off by default)
        sizedDealloc[-]       enable C++14 global sized deallocation
                              functions (on by default)
        throwingNew[-]        assume operator new throws on failure (off by default)
        referenceBinding[-]   a temporary will not bind to a non-const
                              lvalue reference (on by default in C++20 or later, implied by /permissive-)
        twoPhase-             disable two-phase name lookup
        ternary[-]            enforce C++11 rules for conditional operator
                              (on by default in C++20 or later, implied by /permissive-)
        noexceptTypes[-]      enforce C++17 noexcept rules (on by default in C++17 or later)
        alignedNew[-]         enable C++17 alignment of dynamically allocated objects (on by default)
        hiddenFriend[-]       enforce Standard C++ hidden friend rules
                              (on by default in C++20 or later, implied by /permissive-)
        externC[-]            enforce Standard C++ rules for 'extern "C"' functions
                              (on by default in C++20 or later, implied by /permissive-)
        lambda[-]             better lambda support by using the newer lambda processor
                              (on by default in C++20 or later, implied by /permissive-)
        tlsGuards[-]          generate runtime checks for TLS variable initialization (on by default)
        zeroSizeArrayNew[-]   call member new/delete for 0-size arrays of objects (on by default)
        static_assert[-]      strict handling of 'static_assert' (on by default in C++20 or later,
                              implied by /permissive-)
        gotoScope[-]          cannot jump past the initialization of a variable (implied by /permissive-)
        templateScope[-]      enforce Standard C++ template parameter shadowing rules
        enumTypes[-]          enable Standard C++ underlying enum types (off by default)
        checkGwOdr[-]         enforce Standard C++ one definition rule violations
                              when /Gw has been enabled (off by default)
        nrvo[-]               enable optional copy and move elision (on by default in C++20 or later,
                              implied by /permissive- or /O2)
        __STDC__              define __STDC__ to 1 in C
        __cplusplus[-]        __cplusplus macro reports the supported C++ standard (off by default)
        char8_t[-]            enable C++20 native `u8` literal support as `const char8_t`
                              (on by default in C++20 or later)
        externConstexpr[-]    enable external linkage for constexpr variables in C++
                              (on by default in C++20 or later, implied by /permissive-)
        preprocessor[-]       enable standard conforming preprocessor in C/C++
                              (on by default in C11 or later)
      /ZI enable Edit and Continue debug info 
      /openmp enable OpenMP 2.0 language extensions
      /openmp:experimental enable OpenMP 2.0 language extensions plus select OpenMP 3.0+ language extensions
      /openmp:llvm OpenMP language extensions using LLVM runtime
      
                                    -MISCELLANEOUS-
      
      @<file> options response file           /?, /help print this help message
      /bigobj generate extended object format /c compile only, no link
      /FC use full pathnames in diagnostics   /H<num> max external name length
      /J default char type is unsigned        
      /MP[n] use up to 'n' processes for compilation
      /nologo suppress copyright message      /showIncludes show include file names
      /Tc<source file> compile file as .c     /Tp<source file> compile file as .cpp
      /TC compile all files as .c             /TP compile all files as .cpp
      /V<string> set version string           /Yc[file] create .PCH file
      /Yd put debug info in every .OBJ        /Yl[sym] inject .PCH ref for debug lib
      /Yu[file] use .PCH file                 /Y- disable all PCH options
      /Zm<n> max memory alloc (% of default)  /FS force to use MSPDBSRV.EXE
      /source-charset:<iana-name>|.nnnn set source character set
      /execution-charset:<iana-name>|.nnnn set execution character set
      /utf-8 set source and execution character set to UTF-8
      /validate-charset[-] validate UTF-8 files for only legal characters
      /fastfail[-] enable fast-fail mode      /JMC[-] enable native just my code
      /presetPadding[-] zero initialize padding for stack based class types
      /volatileMetadata[-] generate metadata on volatile memory accesses
      /sourcelink [file] file containing source link information
      
                                      -LINKING-
      
      /LD Create .DLL                         /LDd Create .DLL debug library
      /LN Create a .netmodule                 /F<num> set stack size
      /link [linker options and libraries]    /MD link with MSVCRT.LIB
      /MT link with LIBCMT.LIB                /MDd link with MSVCRTD.LIB debug lib
      /MTd link with LIBCMTD.LIB debug lib    
      
                                    -CODE ANALYSIS-
      
      /analyze[-] Enable native analysis      /analyze:quiet[-] No warning to console
      /analyze:log<name> Warnings to file     /analyze:autolog Log to *.pftlog
      /analyze:autolog:ext<ext> Log to *.<ext>/analyze:autolog- No log file
      /analyze:WX- Warnings not fatal         /analyze:stacksize<num> Max stack frame
      /analyze:max_paths<num> Max paths       /analyze:only Analyze, no code gen
      
                                    -DIAGNOSTICS-
      
      /diagnostics:<args,...> controls the format of diagnostic messages:
                   classic   - retains prior format
                   column[-] - prints column information
                   caret[-]  - prints column and the indicated line of source
      /Wall enable all warnings               /w   disable all warnings
      /W<n> set warning level (default n=1)   
      /Wv:xx[.yy[.zzzzz]] disable warnings introduced after version xx.yy.zzzzz
      /WX treat warnings as errors            /WL enable one line diagnostics
      /wd<n> disable warning n                /we<n> treat warning n as an error
      /wo<n> issue warning n once             /w<l><n> set warning level 1-4 for n
      /external:I <path>      - location of external headers
      /external:env:<var>     - environment variable with locations of external headers
      /external:anglebrackets - treat all headers included via <> as external
      /external:W<n>          - warning level for external headers
      /external:templates[-]  - evaluate warning level across template instantiation chain
      /sdl enable additional security features and warnings
      /options:strict unrecognized compiler options are an error
      
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckLibraryExists.cmake:78 (try_compile)"
      - "CMakeLists.txt:99 (check_library_exists)"
    checks:
      - "Looking for cos in m"
    directories:
      source: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-sf11hz"
      binary: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-sf11hz"
    cmakeVariables:
      CMAKE_C_FLAGS: " /nologo /DWIN32 /D_WINDOWS /utf-8 /MP "
      CMAKE_C_FLAGS_DEBUG: "/MDd /Z7 /Ob0 /Od /RTC1 "
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/src/5.8.1-9968a5852c.clean/cmake"
      CMAKE_MSVC_DEBUG_INFORMATION_FORMAT: ""
      CMAKE_MSVC_RUNTIME_LIBRARY: "MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>"
      VCPKG_CHAINLOAD_TOOLCHAIN_FILE: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg/scripts/toolchains/windows.cmake"
      VCPKG_CRT_LINKAGE: "dynamic"
      VCPKG_CXX_FLAGS: ""
      VCPKG_CXX_FLAGS_DEBUG: ""
      VCPKG_CXX_FLAGS_RELEASE: ""
      VCPKG_C_FLAGS: ""
      VCPKG_C_FLAGS_DEBUG: ""
      VCPKG_C_FLAGS_RELEASE: ""
      VCPKG_INSTALLED_DIR: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed"
      VCPKG_LINKER_FLAGS: ""
      VCPKG_LINKER_FLAGS_DEBUG: ""
      VCPKG_LINKER_FLAGS_RELEASE: ""
      VCPKG_PLATFORM_TOOLSET: "v143"
      VCPKG_PREFER_SYSTEM_LIBS: "OFF"
      VCPKG_SET_CHARSET_FLAG: "ON"
      VCPKG_TARGET_ARCHITECTURE: "x64"
      VCPKG_TARGET_TRIPLET: "x64-windows"
      Z_VCPKG_ROOT_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg"
    buildResult:
      variable: "HAVE_LIBM"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-sf11hz'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe" -v cmTC_f2248
        [1/2] C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\cl.exe  /nologo   /nologo /DWIN32 /D_WINDOWS /utf-8 /MP  -DCHECK_FUNCTION_EXISTS=cos /MDd /Z7 /Ob0 /Od /RTC1 /showIncludes /FoCMakeFiles\\cmTC_f2248.dir\\CheckFunctionExists.c.obj /FdCMakeFiles\\cmTC_f2248.dir\\ /FS -c C:\\Users\\Redux\\cpp-asteroids-sdl2\\vcpkg_installed\\vcpkg\\blds\\wavpack\\x64-windows-dbg\\CMakeFiles\\CMakeScratch\\TryCompile-sf11hz\\CheckFunctionExists.c
        [2/2] C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_f2248.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_f2248.dir\\CheckFunctionExists.c.obj  /out:cmTC_f2248.exe /implib:cmTC_f2248.lib /pdb:cmTC_f2248.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  m.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        FAILED: cmTC_f2248.exe 
        C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_f2248.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_f2248.dir\\CheckFunctionExists.c.obj  /out:cmTC_f2248.exe /implib:cmTC_f2248.lib /pdb:cmTC_f2248.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  m.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        LINK Pass 1: command "C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_f2248.dir\\CheckFunctionExists.c.obj /out:cmTC_f2248.exe /implib:cmTC_f2248.lib /pdb:cmTC_f2248.pdb /version:0.0 /machine:x64 /nologo /debug /INCREMENTAL /subsystem:console m.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:CMakeFiles\\cmTC_f2248.dir/intermediate.manifest CMakeFiles\\cmTC_f2248.dir/manifest.res" failed (exit code 1104) with the following output:
        LINK : fatal error LNK1104: cannot open file 'm.lib'\x0d
        ninja: build stopped: subcommand failed.
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/Internal/CheckSourceCompiles.cmake:108 (try_compile)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "CMakeLists.txt:109 (check_c_source_compiles)"
    checks:
      - "Performing Test HAVE___BUILTIN_CLZ"
    directories:
      source: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-vbkf1q"
      binary: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-vbkf1q"
    cmakeVariables:
      CMAKE_C_FLAGS: " /nologo /DWIN32 /D_WINDOWS /utf-8 /MP "
      CMAKE_C_FLAGS_DEBUG: "/MDd /Z7 /Ob0 /Od /RTC1 "
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/src/5.8.1-9968a5852c.clean/cmake"
      CMAKE_MSVC_DEBUG_INFORMATION_FORMAT: ""
      CMAKE_MSVC_RUNTIME_LIBRARY: "MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>"
      VCPKG_CHAINLOAD_TOOLCHAIN_FILE: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg/scripts/toolchains/windows.cmake"
      VCPKG_CRT_LINKAGE: "dynamic"
      VCPKG_CXX_FLAGS: ""
      VCPKG_CXX_FLAGS_DEBUG: ""
      VCPKG_CXX_FLAGS_RELEASE: ""
      VCPKG_C_FLAGS: ""
      VCPKG_C_FLAGS_DEBUG: ""
      VCPKG_C_FLAGS_RELEASE: ""
      VCPKG_INSTALLED_DIR: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed"
      VCPKG_LINKER_FLAGS: ""
      VCPKG_LINKER_FLAGS_DEBUG: ""
      VCPKG_LINKER_FLAGS_RELEASE: ""
      VCPKG_PLATFORM_TOOLSET: "v143"
      VCPKG_PREFER_SYSTEM_LIBS: "OFF"
      VCPKG_SET_CHARSET_FLAG: "ON"
      VCPKG_TARGET_ARCHITECTURE: "x64"
      VCPKG_TARGET_TRIPLET: "x64-windows"
      Z_VCPKG_ROOT_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg"
    buildResult:
      variable: "HAVE___BUILTIN_CLZ"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-vbkf1q'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe" -v cmTC_faa89
        [1/2] C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\cl.exe  /nologo -DHAVE___BUILTIN_CLZ  /nologo /DWIN32 /D_WINDOWS /utf-8 /MP   /MDd /Z7 /Ob0 /Od /RTC1 /showIncludes /FoCMakeFiles\\cmTC_faa89.dir\\src.c.obj /FdCMakeFiles\\cmTC_faa89.dir\\ /FS -c C:\\Users\\Redux\\cpp-asteroids-sdl2\\vcpkg_installed\\vcpkg\\blds\\wavpack\\x64-windows-dbg\\CMakeFiles\\CMakeScratch\\TryCompile-vbkf1q\\src.c
        [2/2] C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_faa89.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_faa89.dir\\src.c.obj  /out:cmTC_faa89.exe /implib:cmTC_faa89.lib /pdb:cmTC_faa89.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        FAILED: cmTC_faa89.exe 
        C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_faa89.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_faa89.dir\\src.c.obj  /out:cmTC_faa89.exe /implib:cmTC_faa89.lib /pdb:cmTC_faa89.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        LINK Pass 1: command "C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_faa89.dir\\src.c.obj /out:cmTC_faa89.exe /implib:cmTC_faa89.lib /pdb:cmTC_faa89.pdb /version:0.0 /machine:x64 /nologo /debug /INCREMENTAL /subsystem:console kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:CMakeFiles\\cmTC_faa89.dir/intermediate.manifest CMakeFiles\\cmTC_faa89.dir/manifest.res" failed (exit code 1120) with the following output:
        src.c.obj : error LNK2019: unresolved external symbol __builtin_clz referenced in function main\x0d
        cmTC_faa89.exe : fatal error LNK1120: 1 unresolved externals\x0d
        ninja: build stopped: subcommand failed.
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "cmake/TestLargeFiles.cmake:12 (check_include_file)"
      - "CMakeLists.txt:117 (test_large_files)"
    checks:
      - "Looking for sys/types.h"
    directories:
      source: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-v7yb8v"
      binary: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-v7yb8v"
    cmakeVariables:
      CMAKE_C_FLAGS: " /nologo /DWIN32 /D_WINDOWS /utf-8 /MP "
      CMAKE_C_FLAGS_DEBUG: "/MDd /Z7 /Ob0 /Od /RTC1 "
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/src/5.8.1-9968a5852c.clean/cmake"
      CMAKE_MSVC_DEBUG_INFORMATION_FORMAT: ""
      CMAKE_MSVC_RUNTIME_LIBRARY: "MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>"
      VCPKG_CHAINLOAD_TOOLCHAIN_FILE: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg/scripts/toolchains/windows.cmake"
      VCPKG_CRT_LINKAGE: "dynamic"
      VCPKG_CXX_FLAGS: ""
      VCPKG_CXX_FLAGS_DEBUG: ""
      VCPKG_CXX_FLAGS_RELEASE: ""
      VCPKG_C_FLAGS: ""
      VCPKG_C_FLAGS_DEBUG: ""
      VCPKG_C_FLAGS_RELEASE: ""
      VCPKG_INSTALLED_DIR: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed"
      VCPKG_LINKER_FLAGS: ""
      VCPKG_LINKER_FLAGS_DEBUG: ""
      VCPKG_LINKER_FLAGS_RELEASE: ""
      VCPKG_PLATFORM_TOOLSET: "v143"
      VCPKG_PREFER_SYSTEM_LIBS: "OFF"
      VCPKG_SET_CHARSET_FLAG: "ON"
      VCPKG_TARGET_ARCHITECTURE: "x64"
      VCPKG_TARGET_TRIPLET: "x64-windows"
      Z_VCPKG_ROOT_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg"
    buildResult:
      variable: "HAVE_SYS_TYPES_H"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-v7yb8v'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe" -v cmTC_41f56
        [1/2] C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\cl.exe  /nologo   /nologo /DWIN32 /D_WINDOWS /utf-8 /MP   /MDd /Z7 /Ob0 /Od /RTC1 /showIncludes /FoCMakeFiles\\cmTC_41f56.dir\\CheckIncludeFile.c.obj /FdCMakeFiles\\cmTC_41f56.dir\\ /FS -c C:\\Users\\Redux\\cpp-asteroids-sdl2\\vcpkg_installed\\vcpkg\\blds\\wavpack\\x64-windows-dbg\\CMakeFiles\\CMakeScratch\\TryCompile-v7yb8v\\CheckIncludeFile.c
        [2/2] C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_41f56.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_41f56.dir\\CheckIncludeFile.c.obj  /out:cmTC_41f56.exe /implib:cmTC_41f56.lib /pdb:cmTC_41f56.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "cmake/TestLargeFiles.cmake:13 (check_include_file)"
      - "CMakeLists.txt:117 (test_large_files)"
    checks:
      - "Looking for stdint.h"
    directories:
      source: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-fzco32"
      binary: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-fzco32"
    cmakeVariables:
      CMAKE_C_FLAGS: " /nologo /DWIN32 /D_WINDOWS /utf-8 /MP "
      CMAKE_C_FLAGS_DEBUG: "/MDd /Z7 /Ob0 /Od /RTC1 "
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/src/5.8.1-9968a5852c.clean/cmake"
      CMAKE_MSVC_DEBUG_INFORMATION_FORMAT: ""
      CMAKE_MSVC_RUNTIME_LIBRARY: "MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>"
      VCPKG_CHAINLOAD_TOOLCHAIN_FILE: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg/scripts/toolchains/windows.cmake"
      VCPKG_CRT_LINKAGE: "dynamic"
      VCPKG_CXX_FLAGS: ""
      VCPKG_CXX_FLAGS_DEBUG: ""
      VCPKG_CXX_FLAGS_RELEASE: ""
      VCPKG_C_FLAGS: ""
      VCPKG_C_FLAGS_DEBUG: ""
      VCPKG_C_FLAGS_RELEASE: ""
      VCPKG_INSTALLED_DIR: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed"
      VCPKG_LINKER_FLAGS: ""
      VCPKG_LINKER_FLAGS_DEBUG: ""
      VCPKG_LINKER_FLAGS_RELEASE: ""
      VCPKG_PLATFORM_TOOLSET: "v143"
      VCPKG_PREFER_SYSTEM_LIBS: "OFF"
      VCPKG_SET_CHARSET_FLAG: "ON"
      VCPKG_TARGET_ARCHITECTURE: "x64"
      VCPKG_TARGET_TRIPLET: "x64-windows"
      Z_VCPKG_ROOT_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg"
    buildResult:
      variable: "HAVE_STDINT_H"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-fzco32'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe" -v cmTC_04869
        [1/2] C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\cl.exe  /nologo   /nologo /DWIN32 /D_WINDOWS /utf-8 /MP   /MDd /Z7 /Ob0 /Od /RTC1 /showIncludes /FoCMakeFiles\\cmTC_04869.dir\\CheckIncludeFile.c.obj /FdCMakeFiles\\cmTC_04869.dir\\ /FS -c C:\\Users\\Redux\\cpp-asteroids-sdl2\\vcpkg_installed\\vcpkg\\blds\\wavpack\\x64-windows-dbg\\CMakeFiles\\CMakeScratch\\TryCompile-fzco32\\CheckIncludeFile.c
        [2/2] C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_04869.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_04869.dir\\CheckIncludeFile.c.obj  /out:cmTC_04869.exe /implib:cmTC_04869.lib /pdb:cmTC_04869.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "cmake/TestLargeFiles.cmake:14 (check_include_file)"
      - "CMakeLists.txt:117 (test_large_files)"
    checks:
      - "Looking for stddef.h"
    directories:
      source: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-8lje3y"
      binary: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-8lje3y"
    cmakeVariables:
      CMAKE_C_FLAGS: " /nologo /DWIN32 /D_WINDOWS /utf-8 /MP "
      CMAKE_C_FLAGS_DEBUG: "/MDd /Z7 /Ob0 /Od /RTC1 "
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/src/5.8.1-9968a5852c.clean/cmake"
      CMAKE_MSVC_DEBUG_INFORMATION_FORMAT: ""
      CMAKE_MSVC_RUNTIME_LIBRARY: "MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>"
      VCPKG_CHAINLOAD_TOOLCHAIN_FILE: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg/scripts/toolchains/windows.cmake"
      VCPKG_CRT_LINKAGE: "dynamic"
      VCPKG_CXX_FLAGS: ""
      VCPKG_CXX_FLAGS_DEBUG: ""
      VCPKG_CXX_FLAGS_RELEASE: ""
      VCPKG_C_FLAGS: ""
      VCPKG_C_FLAGS_DEBUG: ""
      VCPKG_C_FLAGS_RELEASE: ""
      VCPKG_INSTALLED_DIR: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed"
      VCPKG_LINKER_FLAGS: ""
      VCPKG_LINKER_FLAGS_DEBUG: ""
      VCPKG_LINKER_FLAGS_RELEASE: ""
      VCPKG_PLATFORM_TOOLSET: "v143"
      VCPKG_PREFER_SYSTEM_LIBS: "OFF"
      VCPKG_SET_CHARSET_FLAG: "ON"
      VCPKG_TARGET_ARCHITECTURE: "x64"
      VCPKG_TARGET_TRIPLET: "x64-windows"
      Z_VCPKG_ROOT_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg"
    buildResult:
      variable: "HAVE_STDDEF_H"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-8lje3y'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe" -v cmTC_e546e
        [1/2] C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\cl.exe  /nologo   /nologo /DWIN32 /D_WINDOWS /utf-8 /MP   /MDd /Z7 /Ob0 /Od /RTC1 /showIncludes /FoCMakeFiles\\cmTC_e546e.dir\\CheckIncludeFile.c.obj /FdCMakeFiles\\cmTC_e546e.dir\\ /FS -c C:\\Users\\Redux\\cpp-asteroids-sdl2\\vcpkg_installed\\vcpkg\\blds\\wavpack\\x64-windows-dbg\\CMakeFiles\\CMakeScratch\\TryCompile-8lje3y\\CheckIncludeFile.c
        [2/2] C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_e546e.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_e546e.dir\\CheckIncludeFile.c.obj  /out:cmTC_e546e.exe /implib:cmTC_e546e.lib /pdb:cmTC_e546e.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckTypeSize.cmake:156 (try_compile)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckTypeSize.cmake:283 (__check_type_size_impl)"
      - "cmake/TestLargeFiles.cmake:16 (check_type_size)"
      - "CMakeLists.txt:117 (test_large_files)"
    checks:
      - "Check size of off_t"
    directories:
      source: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-1ddpxh"
      binary: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-1ddpxh"
    cmakeVariables:
      CMAKE_C_FLAGS: " /nologo /DWIN32 /D_WINDOWS /utf-8 /MP "
      CMAKE_C_FLAGS_DEBUG: "/MDd /Z7 /Ob0 /Od /RTC1 "
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/src/5.8.1-9968a5852c.clean/cmake"
      CMAKE_MSVC_DEBUG_INFORMATION_FORMAT: ""
      CMAKE_MSVC_RUNTIME_LIBRARY: "MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>"
      VCPKG_CHAINLOAD_TOOLCHAIN_FILE: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg/scripts/toolchains/windows.cmake"
      VCPKG_CRT_LINKAGE: "dynamic"
      VCPKG_CXX_FLAGS: ""
      VCPKG_CXX_FLAGS_DEBUG: ""
      VCPKG_CXX_FLAGS_RELEASE: ""
      VCPKG_C_FLAGS: ""
      VCPKG_C_FLAGS_DEBUG: ""
      VCPKG_C_FLAGS_RELEASE: ""
      VCPKG_INSTALLED_DIR: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed"
      VCPKG_LINKER_FLAGS: ""
      VCPKG_LINKER_FLAGS_DEBUG: ""
      VCPKG_LINKER_FLAGS_RELEASE: ""
      VCPKG_PLATFORM_TOOLSET: "v143"
      VCPKG_PREFER_SYSTEM_LIBS: "OFF"
      VCPKG_SET_CHARSET_FLAG: "ON"
      VCPKG_TARGET_ARCHITECTURE: "x64"
      VCPKG_TARGET_TRIPLET: "x64-windows"
      Z_VCPKG_ROOT_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg"
    buildResult:
      variable: "HAVE_SIZEOF_OFF_T"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-1ddpxh'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe" -v cmTC_620c8
        [1/2] C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\cl.exe  /nologo   /nologo /DWIN32 /D_WINDOWS /utf-8 /MP   /MDd /Z7 /Ob0 /Od /RTC1 /showIncludes /FoCMakeFiles\\cmTC_620c8.dir\\SIZEOF_OFF_T.c.obj /FdCMakeFiles\\cmTC_620c8.dir\\ /FS -c C:\\Users\\Redux\\cpp-asteroids-sdl2\\vcpkg_installed\\vcpkg\\blds\\wavpack\\x64-windows-dbg\\CMakeFiles\\CMakeScratch\\TryCompile-1ddpxh\\SIZEOF_OFF_T.c
        [2/2] C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_620c8.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_620c8.dir\\SIZEOF_OFF_T.c.obj  /out:cmTC_620c8.exe /implib:cmTC_620c8.lib /pdb:cmTC_620c8.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckTypeSize.cmake:156 (try_compile)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckTypeSize.cmake:283 (__check_type_size_impl)"
      - "cmake/TestLargeFiles.cmake:32 (check_type_size)"
      - "CMakeLists.txt:117 (test_large_files)"
    checks:
      - "Check size of off_t"
    directories:
      source: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-1mjwgl"
      binary: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-1mjwgl"
    cmakeVariables:
      CMAKE_C_FLAGS: " /nologo /DWIN32 /D_WINDOWS /utf-8 /MP "
      CMAKE_C_FLAGS_DEBUG: "/MDd /Z7 /Ob0 /Od /RTC1 "
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/src/5.8.1-9968a5852c.clean/cmake"
      CMAKE_MSVC_DEBUG_INFORMATION_FORMAT: ""
      CMAKE_MSVC_RUNTIME_LIBRARY: "MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>"
      VCPKG_CHAINLOAD_TOOLCHAIN_FILE: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg/scripts/toolchains/windows.cmake"
      VCPKG_CRT_LINKAGE: "dynamic"
      VCPKG_CXX_FLAGS: ""
      VCPKG_CXX_FLAGS_DEBUG: ""
      VCPKG_CXX_FLAGS_RELEASE: ""
      VCPKG_C_FLAGS: ""
      VCPKG_C_FLAGS_DEBUG: ""
      VCPKG_C_FLAGS_RELEASE: ""
      VCPKG_INSTALLED_DIR: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed"
      VCPKG_LINKER_FLAGS: ""
      VCPKG_LINKER_FLAGS_DEBUG: ""
      VCPKG_LINKER_FLAGS_RELEASE: ""
      VCPKG_PLATFORM_TOOLSET: "v143"
      VCPKG_PREFER_SYSTEM_LIBS: "OFF"
      VCPKG_SET_CHARSET_FLAG: "ON"
      VCPKG_TARGET_ARCHITECTURE: "x64"
      VCPKG_TARGET_TRIPLET: "x64-windows"
      Z_VCPKG_ROOT_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg"
    buildResult:
      variable: "HAVE_SIZEOF_OFF_T"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-1mjwgl'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe" -v cmTC_3c3de
        [1/2] C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\cl.exe  /nologo -D_FILE_OFFSET_BITS=64  /nologo /DWIN32 /D_WINDOWS /utf-8 /MP   /MDd /Z7 /Ob0 /Od /RTC1 /showIncludes /FoCMakeFiles\\cmTC_3c3de.dir\\SIZEOF_OFF_T.c.obj /FdCMakeFiles\\cmTC_3c3de.dir\\ /FS -c C:\\Users\\Redux\\cpp-asteroids-sdl2\\vcpkg_installed\\vcpkg\\blds\\wavpack\\x64-windows-dbg\\CMakeFiles\\CMakeScratch\\TryCompile-1mjwgl\\SIZEOF_OFF_T.c
        [2/2] C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_3c3de.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_3c3de.dir\\SIZEOF_OFF_T.c.obj  /out:cmTC_3c3de.exe /implib:cmTC_3c3de.lib /pdb:cmTC_3c3de.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckTypeSize.cmake:156 (try_compile)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckTypeSize.cmake:283 (__check_type_size_impl)"
      - "cmake/TestLargeFiles.cmake:52 (check_type_size)"
      - "CMakeLists.txt:117 (test_large_files)"
    checks:
      - "Check size of off_t"
    directories:
      source: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-65sj80"
      binary: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-65sj80"
    cmakeVariables:
      CMAKE_C_FLAGS: " /nologo /DWIN32 /D_WINDOWS /utf-8 /MP "
      CMAKE_C_FLAGS_DEBUG: "/MDd /Z7 /Ob0 /Od /RTC1 "
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/src/5.8.1-9968a5852c.clean/cmake"
      CMAKE_MSVC_DEBUG_INFORMATION_FORMAT: ""
      CMAKE_MSVC_RUNTIME_LIBRARY: "MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>"
      VCPKG_CHAINLOAD_TOOLCHAIN_FILE: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg/scripts/toolchains/windows.cmake"
      VCPKG_CRT_LINKAGE: "dynamic"
      VCPKG_CXX_FLAGS: ""
      VCPKG_CXX_FLAGS_DEBUG: ""
      VCPKG_CXX_FLAGS_RELEASE: ""
      VCPKG_C_FLAGS: ""
      VCPKG_C_FLAGS_DEBUG: ""
      VCPKG_C_FLAGS_RELEASE: ""
      VCPKG_INSTALLED_DIR: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed"
      VCPKG_LINKER_FLAGS: ""
      VCPKG_LINKER_FLAGS_DEBUG: ""
      VCPKG_LINKER_FLAGS_RELEASE: ""
      VCPKG_PLATFORM_TOOLSET: "v143"
      VCPKG_PREFER_SYSTEM_LIBS: "OFF"
      VCPKG_SET_CHARSET_FLAG: "ON"
      VCPKG_TARGET_ARCHITECTURE: "x64"
      VCPKG_TARGET_TRIPLET: "x64-windows"
      Z_VCPKG_ROOT_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg"
    buildResult:
      variable: "HAVE_SIZEOF_OFF_T"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-65sj80'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe" -v cmTC_758cb
        [1/2] C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\cl.exe  /nologo -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES  /nologo /DWIN32 /D_WINDOWS /utf-8 /MP   /MDd /Z7 /Ob0 /Od /RTC1 /showIncludes /FoCMakeFiles\\cmTC_758cb.dir\\SIZEOF_OFF_T.c.obj /FdCMakeFiles\\cmTC_758cb.dir\\ /FS -c C:\\Users\\Redux\\cpp-asteroids-sdl2\\vcpkg_installed\\vcpkg\\blds\\wavpack\\x64-windows-dbg\\CMakeFiles\\CMakeScratch\\TryCompile-65sj80\\SIZEOF_OFF_T.c
        [2/2] C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_758cb.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_758cb.dir\\SIZEOF_OFF_T.c.obj  /out:cmTC_758cb.exe /implib:cmTC_758cb.lib /pdb:cmTC_758cb.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckTypeSize.cmake:156 (try_compile)"
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckTypeSize.cmake:283 (__check_type_size_impl)"
      - "cmake/TestLargeFiles.cmake:73 (check_type_size)"
      - "CMakeLists.txt:117 (test_large_files)"
    checks:
      - "Check size of off_t"
    directories:
      source: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-w9aij5"
      binary: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-w9aij5"
    cmakeVariables:
      CMAKE_C_FLAGS: " /nologo /DWIN32 /D_WINDOWS /utf-8 /MP "
      CMAKE_C_FLAGS_DEBUG: "/MDd /Z7 /Ob0 /Od /RTC1 "
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/src/5.8.1-9968a5852c.clean/cmake"
      CMAKE_MSVC_DEBUG_INFORMATION_FORMAT: ""
      CMAKE_MSVC_RUNTIME_LIBRARY: "MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>"
      VCPKG_CHAINLOAD_TOOLCHAIN_FILE: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg/scripts/toolchains/windows.cmake"
      VCPKG_CRT_LINKAGE: "dynamic"
      VCPKG_CXX_FLAGS: ""
      VCPKG_CXX_FLAGS_DEBUG: ""
      VCPKG_CXX_FLAGS_RELEASE: ""
      VCPKG_C_FLAGS: ""
      VCPKG_C_FLAGS_DEBUG: ""
      VCPKG_C_FLAGS_RELEASE: ""
      VCPKG_INSTALLED_DIR: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed"
      VCPKG_LINKER_FLAGS: ""
      VCPKG_LINKER_FLAGS_DEBUG: ""
      VCPKG_LINKER_FLAGS_RELEASE: ""
      VCPKG_PLATFORM_TOOLSET: "v143"
      VCPKG_PREFER_SYSTEM_LIBS: "OFF"
      VCPKG_SET_CHARSET_FLAG: "ON"
      VCPKG_TARGET_ARCHITECTURE: "x64"
      VCPKG_TARGET_TRIPLET: "x64-windows"
      Z_VCPKG_ROOT_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg"
    buildResult:
      variable: "HAVE_SIZEOF_OFF_T"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-w9aij5'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe" -v cmTC_ae84f
        [1/2] C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\cl.exe  /nologo -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGE_FILES  /nologo /DWIN32 /D_WINDOWS /utf-8 /MP   /MDd /Z7 /Ob0 /Od /RTC1 /showIncludes /FoCMakeFiles\\cmTC_ae84f.dir\\SIZEOF_OFF_T.c.obj /FdCMakeFiles\\cmTC_ae84f.dir\\ /FS -c C:\\Users\\Redux\\cpp-asteroids-sdl2\\vcpkg_installed\\vcpkg\\blds\\wavpack\\x64-windows-dbg\\CMakeFiles\\CMakeScratch\\TryCompile-w9aij5\\SIZEOF_OFF_T.c
        [2/2] C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_ae84f.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_ae84f.dir\\SIZEOF_OFF_T.c.obj  /out:cmTC_ae84f.exe /implib:cmTC_ae84f.lib /pdb:cmTC_ae84f.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.31/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "CMakeLists.txt:121 (check_function_exists)"
    checks:
      - "Looking for fseeko"
    directories:
      source: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-mo9g14"
      binary: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-mo9g14"
    cmakeVariables:
      CMAKE_C_FLAGS: " /nologo /DWIN32 /D_WINDOWS /utf-8 /MP "
      CMAKE_C_FLAGS_DEBUG: "/MDd /Z7 /Ob0 /Od /RTC1 "
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/src/5.8.1-9968a5852c.clean/cmake"
      CMAKE_MSVC_DEBUG_INFORMATION_FORMAT: ""
      CMAKE_MSVC_RUNTIME_LIBRARY: "MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>"
      VCPKG_CHAINLOAD_TOOLCHAIN_FILE: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg/scripts/toolchains/windows.cmake"
      VCPKG_CRT_LINKAGE: "dynamic"
      VCPKG_CXX_FLAGS: ""
      VCPKG_CXX_FLAGS_DEBUG: ""
      VCPKG_CXX_FLAGS_RELEASE: ""
      VCPKG_C_FLAGS: ""
      VCPKG_C_FLAGS_DEBUG: ""
      VCPKG_C_FLAGS_RELEASE: ""
      VCPKG_INSTALLED_DIR: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed"
      VCPKG_LINKER_FLAGS: ""
      VCPKG_LINKER_FLAGS_DEBUG: ""
      VCPKG_LINKER_FLAGS_RELEASE: ""
      VCPKG_PLATFORM_TOOLSET: "v143"
      VCPKG_PREFER_SYSTEM_LIBS: "OFF"
      VCPKG_SET_CHARSET_FLAG: "ON"
      VCPKG_TARGET_ARCHITECTURE: "x64"
      VCPKG_TARGET_TRIPLET: "x64-windows"
      Z_VCPKG_ROOT_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg"
    buildResult:
      variable: "HAVE_FSEEKO"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeScratch/TryCompile-mo9g14'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe" -v cmTC_097ec
        [1/2] C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\cl.exe  /nologo -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGE_FILES  /nologo /DWIN32 /D_WINDOWS /utf-8 /MP  -DCHECK_FUNCTION_EXISTS=fseeko /MDd /Z7 /Ob0 /Od /RTC1 /showIncludes /FoCMakeFiles\\cmTC_097ec.dir\\CheckFunctionExists.c.obj /FdCMakeFiles\\cmTC_097ec.dir\\ /FS -c C:\\Users\\Redux\\cpp-asteroids-sdl2\\vcpkg_installed\\vcpkg\\blds\\wavpack\\x64-windows-dbg\\CMakeFiles\\CMakeScratch\\TryCompile-mo9g14\\CheckFunctionExists.c
        [2/2] C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_097ec.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_097ec.dir\\CheckFunctionExists.c.obj  /out:cmTC_097ec.exe /implib:cmTC_097ec.lib /pdb:cmTC_097ec.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        FAILED: cmTC_097ec.exe 
        C:\\WINDOWS\\system32\\cmd.exe /C "cd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe" -E vs_link_exe --msvc-ver=1944 --intdir=CMakeFiles\\cmTC_097ec.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100261~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_097ec.dir\\CheckFunctionExists.c.obj  /out:cmTC_097ec.exe /implib:cmTC_097ec.lib /pdb:cmTC_097ec.pdb /version:0.0 /machine:x64  /nologo    /debug /INCREMENTAL /subsystem:console  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd ."
        LINK Pass 1: command "C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\link.exe /nologo CMakeFiles\\cmTC_097ec.dir\\CheckFunctionExists.c.obj /out:cmTC_097ec.exe /implib:cmTC_097ec.lib /pdb:cmTC_097ec.pdb /version:0.0 /machine:x64 /nologo /debug /INCREMENTAL /subsystem:console kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:CMakeFiles\\cmTC_097ec.dir/intermediate.manifest CMakeFiles\\cmTC_097ec.dir/manifest.res" failed (exit code 1120) with the following output:
        CheckFunctionExists.c.obj : error LNK2019: unresolved external symbol fseeko referenced in function main
        cmTC_097ec.exe : fatal error LNK1120: 1 unresolved externals\x0d
        ninja: build stopped: subcommand failed.
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "cmake/wavpackcpu.cmake:85 (try_compile)"
      - "CMakeLists.txt:128 (WavPack_DetectTargetCPUArchitectures)"
    directories:
      source: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeTmp/WavPack_detect_arch/CMakeFiles/CMakeTmp"
      binary: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeTmp/WavPack_detect_arch/CMakeFiles/CMakeTmp"
    cmakeVariables:
      CMAKE_C_FLAGS: " /nologo /DWIN32 /D_WINDOWS /utf-8 /MP "
      CMAKE_C_FLAGS_DEBUG: "/MDd /Z7 /Ob0 /Od /RTC1 "
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/src/5.8.1-9968a5852c.clean/cmake"
      CMAKE_MSVC_DEBUG_INFORMATION_FORMAT: ""
      CMAKE_MSVC_RUNTIME_LIBRARY: "MultiThreaded$<$<CONFIG:Debug>:Debug>$<$<STREQUAL:dynamic,dynamic>:DLL>"
      VCPKG_CHAINLOAD_TOOLCHAIN_FILE: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg/scripts/toolchains/windows.cmake"
      VCPKG_CRT_LINKAGE: "dynamic"
      VCPKG_CXX_FLAGS: ""
      VCPKG_CXX_FLAGS_DEBUG: ""
      VCPKG_CXX_FLAGS_RELEASE: ""
      VCPKG_C_FLAGS: ""
      VCPKG_C_FLAGS_DEBUG: ""
      VCPKG_C_FLAGS_RELEASE: ""
      VCPKG_INSTALLED_DIR: "C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed"
      VCPKG_LINKER_FLAGS: ""
      VCPKG_LINKER_FLAGS_DEBUG: ""
      VCPKG_LINKER_FLAGS_RELEASE: ""
      VCPKG_PLATFORM_TOOLSET: "v143"
      VCPKG_PREFER_SYSTEM_LIBS: "OFF"
      VCPKG_SET_CHARSET_FLAG: "ON"
      VCPKG_TARGET_ARCHITECTURE: "x64"
      VCPKG_TARGET_TRIPLET: "x64-windows"
      Z_VCPKG_ROOT_DIR: "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/vcpkg"
    buildResult:
      variable: "WavPack_CPU_CHECK_ALL"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/Redux/cpp-asteroids-sdl2/vcpkg_installed/vcpkg/blds/wavpack/x64-windows-dbg/CMakeFiles/CMakeTmp/WavPack_detect_arch/CMakeFiles/CMakeTmp'
        
        Run Build Command(s): "C:/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe" -v cmTC_3274f
        [1/2] C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\cl.exe  /nologo   /nologo /DWIN32 /D_WINDOWS /utf-8 /MP   /MDd /Z7 /Ob0 /Od /RTC1 /showIncludes /FoCMakeFiles\\cmTC_3274f.dir\\WavPack_detect_arch.c.obj /FdCMakeFiles\\cmTC_3274f.dir\\cmTC_3274f.pdb /FS -c C:\\Users\\Redux\\cpp-asteroids-sdl2\\vcpkg_installed\\vcpkg\\blds\\wavpack\\x64-windows-dbg\\CMakeFiles\\CMakeTmp\\WavPack_detect_arch.c
        [2/2] C:\\WINDOWS\\system32\\cmd.exe /C "cd . && C:\\PROGRA~2\\MICROS~3\\2022\\BUILDT~1\\VC\\Tools\\MSVC\\1444~1.352\\bin\\Hostx64\\x64\\lib.exe /nologo /machine:x64 /nologo /out:cmTC_3274f.lib CMakeFiles\\cmTC_3274f.dir\\WavPack_detect_arch.c.obj && cd ."
        
      exitCode: 0
...
